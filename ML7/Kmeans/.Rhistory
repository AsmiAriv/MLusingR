shiny::runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
runApp('C:/R/Coursera/CapstoneProject/Project/AsmiArivWordPredict')
q()
---
data(arbuthnot)
```{r load-abrbuthnot-data}
data(arbuthnot)
```
data(arbuthnot)
library(dplyr)
library(ggplot2)
library(statsr)
data(arbuthnot)
head(arbuthnot)
dim(arbuthnot)
# Chunk 1: load-packages
library(dplyr)
library(ggplot2)
library(statsr)
# Chunk 2: load-abrbuthnot-data
data(arbuthnot)
# Chunk 3: view-data
arbuthnot
# Chunk 4: dim-data
dim(arbuthnot)
# Chunk 5: names-data
names(arbuthnot)
# Chunk 6: view-boys
arbuthnot$boys
# Chunk 7: extract-counts-of-girls-born
# type your code for the Question 2 here, and Knit
# Chunk 8: plot-girls-vs-year
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
# Chunk 9: plot-help
?ggplot
# Chunk 10: calc-total-bapt-numbers
5218 + 4683
# Chunk 11: calc-total-bapt-vars
arbuthnot$boys + arbuthnot$girls
# Chunk 12: calc-total-bapt-vars-save
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
# Chunk 13: plot-total-vs-year-line
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line()
# Chunk 14: plot-total-vs-year-line-and-point
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
# Chunk 15: plot-proportion-of-boys-over-time
# type your code for the Exercise here, and Knit
# Chunk 16: boys-more-than-girls
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
# Chunk 17: load-present-data
data(present)
# Chunk 18: variables-in-present
# type your code for Question 4 here, and Knit
# Chunk 19: years-in-present-data
# type your code for Exercise here, and Knit
# Chunk 20: prop-boys-over-time
# type your code for Question 5 here, and Knit
# Chunk 21: more-boys-per-year
# type your code for Question 6 here, and Knit
# Chunk 22: prop-boy-girl-over-time
# type your code for Question 7 here, and Knit
# Chunk 23: most-total-births
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
#present %>%
#  mutate(total = ?) %>%
#  arrange(desc(total))
View(arbuthnot)
names(arbuthnot)
View(arbuthnot)
View(arbuthnot)
arbuthnot$boys
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_line()
?ggplot
arbuthnot$boys + arbuthnot$girls
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line()
ggplot(data = arbuthnot, aes(x = year, y = total)) +
geom_line() +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = boys/total)) +
geom_line() +
geom_point()
data(present)
names(present)
range(present$year)
present <- present %>% mutate(total=boys+girls)
present <- present %>% mutate(prop_boys=boys/total)
ggplot(present, aes(x=year,y=prop_boys)) + geom_line() + geom_point()
present <- present %>% mutate(more_boys=boys>girls)
ggplot(present, aes(x=year, y=more_boys)) + geom_bar()
ggplot(present, aes(x=year, y=more_boys)) + geom_bar(stat="identity")
ggplot(present, aes(x=more_boys)) + geom_bar()
table(present%more_boys)
table(present$more_boys)
dim(present)
present <- present %>% mutate(prop_boy_girl=boys/girls)
ggplot(present, aes(x=year,y=prop_boy_girl)) + geom_line() + geom_point()
present %>% mutate(total = year) %>% arrange(desc(total))
present %>% mutate(total = total) %>% arrange(desc(total))
nycflights <- nycflights %>%
mutate(avg_speed = (60*distance)/air_time) %>% select(avg_speed, tailnum)
data(kobe_basket)
pbinom(4,10,0.6)
pbinom(300,600,0.45)
pbinom(301,600,0.45)
1-pbinom(300,600,0.45)
1-pbinom(301,600,0.45)
val <- c(53.8, 56.1, 54.5, 54.8, 55.2, 55.1, 54.7, 55.8, 55.9, 54.5)
m <- mean(val)
m
z <- (55-55.04)/0.3
z
pnorm(.4483, 55.04,0.3)
pnorm(0.4483, mean=55.04,sd=0.3)
pnorm(-0.13333, mean=55.04,sd=0.3)
pnorm(55, mean=55.04,sd=0.3)
t.test(55, mean=55.04,sd=0.3)
t.test(0.4469649)
t.test(55, mu=55.04,sd=0.3)
t.test(val, mu=55.04,sd=0.3)
t.test(val, alternative="less",mu=55.04,sd=0.3)
1-0.4469649
t.test(val, mu=55,sd=0.3)
pnorm(55.04, mean=55,sd=0.3)
(55.04-55)/0.3
1-pnorm(55.04, mean=55,sd=0.3)
val
sd(val)
actval-predict(m1, newdata=data.frame(at_bats=5579))
library(httpuv)
library(Rfacebook)
library(RColorBrewer)
library(RCurl)
library(rjson)
library(httr)
access_token <-
EAACEdEose0cBAGNcdyUGWlooHJMUgvrAXuIJd8u9Z
BpVZCQ9PZB8nULriCjucoeas0ZAxRLomIAMwJXM6Wo
oFdnSm8uWj9ZArvOp0erCZASVYaTYZCYuQVbANG5pb
CMrRpQSZBWZBJaQ4GzTSg55lxJRkQ4k5Ndydul9WB0
Xpoe0uZBRUi5ssWTPlK
access_token <- EAACEdEose0cBAGNcdyUGWlooHJMUgvrAXuIJd8u9ZBpVZCQ9PZB8nULriCjucoeas0ZAxRLomIAMwJXM6WooFdnSm8uWj9ZArvOp0erCZASVYaTYZCYuQVbANG5pbCMrRpQSZBWZBJaQ4GzTSg55lxJRkQ4k5Ndydul9WB0Xpoe0uZBRUi5ssWTPlK
access_token <- "EAACEdEose0cBAGNcdyUGWlooHJMUgvrAXuIJd8u9ZBpVZCQ9PZB8nULriCjucoeas0ZAxRLomIAMwJXM6WooFdnSm8uWj9ZArvOp0erCZASVYaTYZCYuQVbANG5pbCMrRpQSZBWZBJaQ4GzTSg55lxJRkQ4k5Ndydul9WB0Xpoe0uZBRUi5ssWTPlK"
options(Rcurloptions=list(verbose=FALSE,capath=system.file("CurlSSL","cacert.pem",package="RCurl"), ssl.verifypeer=FALSE))
me <- getUsers("me",token=access_token)
str(me)
me
myFriends <- getFriends(access_token,simplify=FALSE)
myFriends
?glm
q()
setwd('C:/R/MachineLearning/ML7/Kmeans')
c <- 1:10
which(c==1)
which(c==10)
setwd("C:/R/MachineLearning/ML7/Kmeans")
#Initializing
rm(list=ls()) #Using this code will remove all the objects from R session
#loading computeCentroids.R
source('computeCentroids.R')
#loading computeCentroids.R
source('findClosestCentroids.R')
library(R.matlab) #Required for reading .mat file
# Load Training Data
data <- readMat('ex7data2.mat')
data
class(data)
length(data)
X <- data[[1]]
class(X)
dim(X)
matrix(c(3, 3, 6, 2, 8, 5),2)
matrix(c(3, 3, 6, 2, 8, 5),2, byrow = F)
matrix(c(3, 3, 6, 2, 8, 5),2, byrow = T)
K = 3; # 3 Centroids
initial_centroids = matrix(c(3, 3, 6, 2, 8, 5),2, byrow = T)
initial_centroids = matrix(c(3, 3, 6, 2, 8, 5),3, byrow = T)
initial_centroids
idx = findClosestCentroids(X, initial_centroids)
class(idx)
length(idx)
idx
(X[1,]-centroids[1,])%*%t(X[1,]-centroids[1,])
(X[1,]-initial_centroids[1,])%*%t(X[1,]-initial_centroids[1,])
(X[1,]-initial_centroids[1,])%*%(t(X[1,]-initial_centroids[1,]))
t(X[1,]-initial_centroids[1,])%*%((X[1,]-initial_centroids[1,]))
source('findClosestCentroids.R')
initial_centroids = matrix(c(3, 3, 6, 2, 8, 5),3, byrow = T)
#Find the closest centroids for the examples using the
# initial_centroids
idx = findClosestCentroids(X, initial_centroids)
idx[1:3]
cat('Closest centroids for the first 3 examples: \n')
idx[1:3]
cat('\n(the closest centroids should be 1, 3, 2 respectively)\n')
centroids = computeCentroids(X, idx, K)
cat('Centroids computed after initial finding of closest centroids: \n')
centroids
cat('\n(the centroids should be\n')
cat('   [ 2.428301 3.157924 ]\n')
cat('   [ 5.813503 2.633656 ]\n');
cat('   [ 7.119387 3.616684 ]\n\n');
K
which(idx==1)
ind <- which(idx==1)
cen <- mean(X[(ind),])
cen
m = nrow(X)
n = ncol(X)
centroids = matrix(rep(0, K*n),K)
dim(centroids)
source('computeCentroids.R')
centroids = computeCentroids(X, idx, K)
cat('Centroids computed after initial finding of closest centroids: \n')
centroids
cat('\n(the centroids should be\n')
cat('   [ 2.428301 3.157924 ]\n')
cat('   [ 5.813503 2.633656 ]\n');
cat('   [ 7.119387 3.616684 ]\n\n');
